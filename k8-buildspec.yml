---
version: 0.2
phases:
  install:
    commands:
      - kubectl version --short --client
  pre_build:
      commands:
        # Fetch Docker credentials from AWS Secrets Manager
        - echo "Fetching Docker credentials from AWS Secrets Manager"
        - SECRET=$(aws secretsmanager get-secret-value --secret-id docker-hub-credentials --query "SecretString" --output text)
      
        # Extract username and password from the JSON response
        - DOCKER_USERNAME=$(echo $SECRET | sed -n 's/.*"username":"\([^"]*\)".*/\1/p')
        - DOCKER_PASSWORD=$(echo $SECRET | sed -n 's/.*"password":"\([^"]*\)".*/\1/p')
      
        # Print the Docker username to the CodeBuild log
        - echo "Docker Username $DOCKER_USERNAME"
        
        # Log in to Docker registry
        - echo "Logging in to Docker registry"
        - echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
        - TAG="${BRANCH}-$CODEBUILD_BUILD_NUMBER.$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
        - echo $TAG
        - sed -i.bak -e 's@CONTAINER_IMAGE@'"$REPOSITORY_URI:$TAG"'@' kubernetes/k8-cronjob.yaml
        - echo "${CODEBUILD_WEBHOOK_HEAD_REF}"
        - echo "${BRANCH}"
        - echo $REPOSITORY_URI
        - $(aws ecr get-login --no-include-email)
  build:
    commands:
      - |
        if expr "${BRANCH}" : ".*master" >/dev/null || expr "${BRANCH}" : ".*dev" >/dev/null; then
          docker build --tag $REPOSITORY_URI:$TAG .
        fi
  post_build:
    commands:
      - |
        if expr "${BRANCH}" : ".*master" >/dev/null || expr "${BRANCH}" : ".*dev" >/dev/null; then
          docker push $REPOSITORY_URI:$TAG
          # Log out from the Docker registry to clear credentials
          docker logout $REPOSITORY_URI
          aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region us-east-1 --role-arn $EKS_KUBECTL_ROLE_ARN
          kubectl set image cronjob/$CRON_JOB_NAME $CRON_JOB_NAME=$REPOSITORY_URI:$TAG -n reciter
        fi
